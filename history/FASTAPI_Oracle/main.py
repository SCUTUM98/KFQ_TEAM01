from typing import List
from fastapi import FastAPI, HTTPException
import cx_Oracle
from pydantic import BaseModel

app = FastAPI()

class Item(BaseModel):
    camera_name: str
    time: str
    xmin: float
    ymin: float
    xmax: float
    ymax: float
    confidence: float
    mclass: int
    name: str

# Oracle 데이터베이스 연결 설정
dsn = cx_Oracle.makedsn("localhost", 1521, service_name="orcl")
connection = cx_Oracle.connect("c##scott", "tiger", dsn)


# 테이블 생성 DDL 문
create_table_query = """
    CREATE TABLE items (
        id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        camera_name VARCHAR2(255),
        time VARCHAR2(255),
        xmin NUMBER,
        ymin NUMBER,
        xmax NUMBER,
        ymax NUMBER,
        confidence NUMBER,
        mclass NUMBER,
        name VARCHAR2(255)
    )
"""

with connection.cursor() as cursor:
    cursor.execute(create_table_query)
    connection.commit()



@app.post("/items")
async def create_item(item: Item):
    query = "INSERT INTO items (camera_name, time, xmin, ymin, xmax, ymax, confidence, mclass, name) " \
            "VALUES (:camera_name, :time, :xmin, :ymin, :xmax, :ymax, :confidence, :mclass, :name)"
    with connection.cursor() as cursor:
        cursor.execute(query, item.dict())
        connection.commit()
    return {"message": "Item added successfully"}

@app.get("/items")
async def get_items():
    query = "SELECT camera_name, time, xmin, ymin, xmax, ymax, confidence, mclass, name FROM items"
    with connection.cursor() as cursor:
        cursor.execute(query)
        result = cursor.fetchall()
    items = []
    for row in result:
        item = dict(zip(cursor.description, row))
        items.append(item)
    return items